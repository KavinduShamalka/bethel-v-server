import { AutoConnectOptions, CommunicationLayerPreference, DappMetadata, ServiceStatus, StorageManagerProps } from '@metamask/sdk-communication-layer';
import EventEmitter2 from 'eventemitter2';
import WebView from 'react-native-webview';
import { SDKProvider } from './provider/SDKProvider';
import { RemoteConnection, RemoteConnectionProps } from './services/RemoteConnection';
import { WalletConnect } from './services/WalletConnect';
import { SDKLoggingOptions } from './types/SDKLoggingOptions';
import { SDKUIOptions } from './types/SDKUIOptions';
import { WakeLockStatus } from './types/WakeLockStatus';
export interface MetaMaskSDKOptions {
    injectProvider?: boolean;
    forceInjectProvider?: boolean;
    forceDeleteProvider?: boolean;
    checkInstallationImmediately?: boolean;
    forceRestartWalletConnect?: boolean;
    checkInstallationOnAllCalls?: boolean;
    preferDesktop?: boolean;
    openDeeplink?: (arg: string) => void;
    useDeeplink?: boolean;
    wakeLockType?: WakeLockStatus;
    WalletConnectInstance?: any;
    shouldShimWeb3?: boolean;
    webRTCLib?: any;
    communicationLayerPreference?: CommunicationLayerPreference;
    transports?: string[];
    dappMetadata: DappMetadata;
    timer?: any;
    enableDebug?: boolean;
    developerMode?: boolean;
    ui?: SDKUIOptions;
    autoConnect?: AutoConnectOptions;
    modals?: Pick<RemoteConnectionProps, 'modals'>;
    communicationServerUrl?: string;
    storage?: StorageManagerProps;
    logging?: SDKLoggingOptions;
}
export declare class MetaMaskSDK extends EventEmitter2 {
    private options;
    private provider?;
    private remoteConnection?;
    private walletConnect?;
    private installer?;
    private dappMetadata?;
    private _initialized;
    private debug;
    constructor(options?: MetaMaskSDKOptions);
    initialize(options: MetaMaskSDKOptions): Promise<void>;
    connect(): Promise<import("@metamask/providers/dist/utils").Maybe<unknown>>;
    resume(): void;
    disconnect(): void;
    terminate(): void;
    isInitialized(): boolean;
    getWalletConnectConnector(): WalletConnect;
    getProvider(): SDKProvider | undefined;
    getUniversalLink(): string;
    _testStorage(): Promise<void> | undefined;
    _getChannelConfig(): import("@metamask/sdk-communication-layer").ChannelConfig | undefined;
    _ping(): void;
    _keyCheck(): void;
    _getServiceStatus(): ServiceStatus | undefined;
    _getRemoteConnection(): RemoteConnection | undefined;
    _getDappMetadata(): DappMetadata | undefined;
    _getKeyInfo(): import("@metamask/sdk-communication-layer").KeyInfo | undefined;
    _resetKeys(): void;
    _getConnection(): RemoteConnection | undefined;
}
declare global {
    interface Window {
        ReactNativeWebView?: WebView;
        ethereum?: SDKProvider;
        extension: unknown;
        MSStream: unknown;
    }
}
//# sourceMappingURL=sdk.d.ts.map